/*States: 
splashScreen
gameScreen
gameOverScreen*/

window.addEventListener('load', () => {
  const canvas = document.querySelector('canvas')

  const ctx = canvas.getContext('2d')

  const startBtn = document.getElementById('start-button')          //removed on Game screen
  const restartBtn = document.getElementById('restart')             //displayed on GameOver screen
  const logo = document.getElementById('logo-img')                  //removed on Game screen
  const gameBoard = document.getElementById('game-board') 
  const splashText = document.getElementById('splash-text')
  const arrows = document.querySelector('.arrows-img')
  const gameOverText = document.getElementById('game-over-text') 

 // canvas.style.display = 'none'                                    //don't display canvas on SplashScreen
  //restartBtn.style.display = 'none'                                to be done

  const bgImg = new Image()
  bgImg.src = '/images/crowd.jpeg' 
  const djImg = new Image()
  djImg.src = '/images/logo.jpeg'

  const djRadius = 20
  let djWidth = 100
  let djHeight = 100
  let djSpeed = 2

  let isMovingLeft = false
  let isMovingRight = false
  let isMovingUp = false
  let isMovingDown = false

  let obstacleX = 100
  let obstacleY = 100
  let obstacleSpeedX = 2
  let obstacleSpeedY = 2

  let score = 0
  let gameOver = false
  let animateId

  const putCrowd = () => {
    ctx.beginPath()
    ctx.drawImage(bgImg, 0, 0, canvas.width, canvas.height)
    ctx.closePath()
  }

  const putDJ = () => {
    ctx.beginPath()
    drawDJ()
//    ctx.drawImage(djImg, 20, canvas.height/2, 100, 110)
    ctx.closePath()
  }

  const animate = () => {
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    putCrowd()
    putDJ()
  // putObstacle()                                               //to be done

  if (djHeight > canvas.height - djRadius) {
    gameOver = true
  }
  ctx.font = '24px sans-serif'
  ctx.fillText(score, 10, 30)
  if (gameOver) {
    cancelAnimationFrame(animateId)
    //Display gameover text
    ctx.font = '48px sans-serif'
    ctx.fillText('GAME OVER', canvas.width / 2 - 150, canvas.height / 2)
    restartBtn.style.display = 'block'
  } else {
    animateId = requestAnimationFrame(animate)
  }
  }


  const startGame = () => {
    startBtn.style.display = 'none'
    logo.style.display = 'none'
    splashText.style.display = 'none'
    arrows.style.display = 'none'
    gameBoard.style.display = 'block'
    gameOverText.style.display = 'none'

    animate()
  }

  const buildGameOverScreen = () => {
    restartBtn.style.display = 'block'
    startBtn.style.display = 'none'
    logo.style.display = 'none'
    splashText.style.display = 'none'
    gameOverText.style.display = 'block'
    arrows.style.display = 'none'
    gameBoard.style.display = 'none'
  }

  startBtn.addEventListener('click', startGame)

  // restartBtn.addEventListener('click', () => {                     //to be done
  //   restartBtn.style.display = 'none'

  //   paddleWidth = 100

  //   paddleX = canvas.width / 2 - paddleWidth / 2

  //   isMovingLeft = false
  //   isMovingRight = false

  //   ballX = 100
  //   ballY = 100
  //   ballSpeedX = 2
  //   ballSpeedY = 2

  //   score = 0
  //   gameOver = false

  //   startGame()
  // })

  document.addEventListener('keydown', event => {
    console.log(event)
    if (event.key === 'ArrowUp') {
      isMovingUp = true
    }
    if (event.key === 'ArrowDown') {
      isMovingDown = true
    }
  })

  document.addEventListener('keyup', event => {
    console.log(event)
    if (event.key === 'ArrowUp') {
      isMovingLeft = false
    }
    if (event.key === 'ArrowDown') {
      isMovingRight = false
    }
  })
})